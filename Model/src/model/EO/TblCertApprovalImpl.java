package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 30 12:16:39 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblCertApprovalImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CertAppMasterId,
        CertApprovalId,
        Dated,
        CertRateId,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        GmcNo,
        LetterNo,
        TblCertAppMaster,
        TblCertDisburse,
        TblCertRate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CERTAPPMASTERID = AttributesEnum.CertAppMasterId.index();
    public static final int CERTAPPROVALID = AttributesEnum.CertApprovalId.index();
    public static final int DATED = AttributesEnum.Dated.index();
    public static final int CERTRATEID = AttributesEnum.CertRateId.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int GMCNO = AttributesEnum.GmcNo.index();
    public static final int LETTERNO = AttributesEnum.LetterNo.index();
    public static final int TBLCERTAPPMASTER = AttributesEnum.TblCertAppMaster.index();
    public static final int TBLCERTDISBURSE = AttributesEnum.TblCertDisburse.index();
    public static final int TBLCERTRATE = AttributesEnum.TblCertRate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblCertApprovalImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblCertApproval");
    }

    /**
     * Gets the attribute value for CertAppMasterId, using the alias name CertAppMasterId.
     * @return the value of CertAppMasterId
     */
    public Number getCertAppMasterId() {
        return (Number) getAttributeInternal(CERTAPPMASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertAppMasterId.
     * @param value value to set the CertAppMasterId
     */
    public void setCertAppMasterId(Number value) {
        setAttributeInternal(CERTAPPMASTERID, value);
    }

    /**
     * Gets the attribute value for CertApprovalId, using the alias name CertApprovalId.
     * @return the value of CertApprovalId
     */
    public Number getCertApprovalId() {
        return (Number) getAttributeInternal(CERTAPPROVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertApprovalId.
     * @param value value to set the CertApprovalId
     */
    public void setCertApprovalId(Number value) {
        setAttributeInternal(CERTAPPROVALID, value);
    }

    /**
     * Gets the attribute value for Dated, using the alias name Dated.
     * @return the value of Dated
     */
    public Timestamp getDated() {
        return (Timestamp) getAttributeInternal(DATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dated.
     * @param value value to set the Dated
     */
    public void setDated(Timestamp value) {
        setAttributeInternal(DATED, value);
    }

    /**
     * Gets the attribute value for CertRateId, using the alias name CertRateId.
     * @return the value of CertRateId
     */
    public Number getCertRateId() {
        return (Number) getAttributeInternal(CERTRATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertRateId.
     * @param value value to set the CertRateId
     */
    public void setCertRateId(Number value) {
        setAttributeInternal(CERTRATEID, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for GmcNo, using the alias name GmcNo.
     * @return the value of GmcNo
     */
    public String getGmcNo() {
        return (String) getAttributeInternal(GMCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GmcNo.
     * @param value value to set the GmcNo
     */
    public void setGmcNo(String value) {
        setAttributeInternal(GMCNO, value);
    }

    /**
     * Gets the attribute value for LetterNo, using the alias name LetterNo.
     * @return the value of LetterNo
     */
    public String getLetterNo() {
        return (String) getAttributeInternal(LETTERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for LetterNo.
     * @param value value to set the LetterNo
     */
    public void setLetterNo(String value) {
        setAttributeInternal(LETTERNO, value);
    }

    /**
     * @return the associated entity TblCertAppMasterImpl.
     */
    public TblCertAppMasterImpl getTblCertAppMaster() {
        return (TblCertAppMasterImpl) getAttributeInternal(TBLCERTAPPMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity TblCertAppMasterImpl.
     */
    public void setTblCertAppMaster(TblCertAppMasterImpl value) {
        setAttributeInternal(TBLCERTAPPMASTER, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblCertDisburse() {
        return (RowIterator) getAttributeInternal(TBLCERTDISBURSE);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public TblCertRateImpl getTblCertRate() {
        return (TblCertRateImpl) getAttributeInternal(TBLCERTRATE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblCertRate(TblCertRateImpl value) {
        setAttributeInternal(TBLCERTRATE, value);
    }


    /**
     * @param certApprovalId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number certApprovalId) {
        return new Key(new Object[] { certApprovalId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                 try {
                     loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
                 } catch(Exception ex) {
                     ex.printStackTrace();
                 }
                 
                 if (operation == DML_INSERT) {
                     setCreatedBy(loginId);
                     setUpdatedBy(loginId);
                     } else if(operation == DML_UPDATE) {
                     setUpdatedBy(loginId);
                 }
        super.doDML(operation, e);
    }
}

