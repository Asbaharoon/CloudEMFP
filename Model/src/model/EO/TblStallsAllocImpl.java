package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 30 12:40:43 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblStallsAllocImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        StallsAllocId,
        ExhibitorsId,
        ExpoHallsId,
        ExpoStallsId,
        ExpoStallsType,
        StallDiscAmt,
        StallAmount,
        Representative,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblExhibitors,
        TblExpoHalls,
        TblExpoStalls;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int STALLSALLOCID = AttributesEnum.StallsAllocId.index();
    public static final int EXHIBITORSID = AttributesEnum.ExhibitorsId.index();
    public static final int EXPOHALLSID = AttributesEnum.ExpoHallsId.index();
    public static final int EXPOSTALLSID = AttributesEnum.ExpoStallsId.index();
    public static final int EXPOSTALLSTYPE = AttributesEnum.ExpoStallsType.index();
    public static final int STALLDISCAMT = AttributesEnum.StallDiscAmt.index();
    public static final int STALLAMOUNT = AttributesEnum.StallAmount.index();
    public static final int REPRESENTATIVE = AttributesEnum.Representative.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLEXHIBITORS = AttributesEnum.TblExhibitors.index();
    public static final int TBLEXPOHALLS = AttributesEnum.TblExpoHalls.index();
    public static final int TBLEXPOSTALLS = AttributesEnum.TblExpoStalls.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblStallsAllocImpl() {
    }

    /**
     * Gets the attribute value for StallsAllocId, using the alias name StallsAllocId.
     * @return the value of StallsAllocId
     */
    public BigDecimal getStallsAllocId() {
        return (BigDecimal) getAttributeInternal(STALLSALLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StallsAllocId.
     * @param value value to set the StallsAllocId
     */
    public void setStallsAllocId(BigDecimal value) {
        setAttributeInternal(STALLSALLOCID, value);
    }

    /**
     * Gets the attribute value for ExhibitorsId, using the alias name ExhibitorsId.
     * @return the value of ExhibitorsId
     */
    public BigDecimal getExhibitorsId() {
        return (BigDecimal) getAttributeInternal(EXHIBITORSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExhibitorsId.
     * @param value value to set the ExhibitorsId
     */
    public void setExhibitorsId(BigDecimal value) {
        setAttributeInternal(EXHIBITORSID, value);
    }

    /**
     * Gets the attribute value for ExpoHallsId, using the alias name ExpoHallsId.
     * @return the value of ExpoHallsId
     */
    public BigDecimal getExpoHallsId() {
        return (BigDecimal) getAttributeInternal(EXPOHALLSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpoHallsId.
     * @param value value to set the ExpoHallsId
     */
    public void setExpoHallsId(BigDecimal value) {
        setAttributeInternal(EXPOHALLSID, value);
    }

    /**
     * Gets the attribute value for ExpoStallsId, using the alias name ExpoStallsId.
     * @return the value of ExpoStallsId
     */
    public BigDecimal getExpoStallsId() {
        return (BigDecimal) getAttributeInternal(EXPOSTALLSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpoStallsId.
     * @param value value to set the ExpoStallsId
     */
    public void setExpoStallsId(BigDecimal value) {
        setAttributeInternal(EXPOSTALLSID, value);
    }

    /**
     * Gets the attribute value for ExpoStallsType, using the alias name ExpoStallsType.
     * @return the value of ExpoStallsType
     */
    public String getExpoStallsType() {
        return (String) getAttributeInternal(EXPOSTALLSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpoStallsType.
     * @param value value to set the ExpoStallsType
     */
    public void setExpoStallsType(String value) {
        setAttributeInternal(EXPOSTALLSTYPE, value);
    }

    /**
     * Gets the attribute value for StallDiscAmt, using the alias name StallDiscAmt.
     * @return the value of StallDiscAmt
     */
    public BigDecimal getStallDiscAmt() {
        return (BigDecimal) getAttributeInternal(STALLDISCAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StallDiscAmt.
     * @param value value to set the StallDiscAmt
     */
    public void setStallDiscAmt(BigDecimal value) {
        setAttributeInternal(STALLDISCAMT, value);
    }

    /**
     * Gets the attribute value for StallAmount, using the alias name StallAmount.
     * @return the value of StallAmount
     */
    public BigDecimal getStallAmount() {
        return (BigDecimal) getAttributeInternal(STALLAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StallAmount.
     * @param value value to set the StallAmount
     */
    public void setStallAmount(BigDecimal value) {
        setAttributeInternal(STALLAMOUNT, value);
    }

    /**
     * Gets the attribute value for Representative, using the alias name Representative.
     * @return the value of Representative
     */
    public String getRepresentative() {
        return (String) getAttributeInternal(REPRESENTATIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Representative.
     * @param value value to set the Representative
     */
    public void setRepresentative(String value) {
        setAttributeInternal(REPRESENTATIVE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity TblExhibitorsImpl.
     */
    public TblExhibitorsImpl getTblExhibitors() {
        return (TblExhibitorsImpl) getAttributeInternal(TBLEXHIBITORS);
    }

    /**
     * Sets <code>value</code> as the associated entity TblExhibitorsImpl.
     */
    public void setTblExhibitors(TblExhibitorsImpl value) {
        setAttributeInternal(TBLEXHIBITORS, value);
    }

    /**
     * @return the associated entity TblExpoHallsImpl.
     */
    public TblExpoHallsImpl getTblExpoHalls() {
        return (TblExpoHallsImpl) getAttributeInternal(TBLEXPOHALLS);
    }

    /**
     * Sets <code>value</code> as the associated entity TblExpoHallsImpl.
     */
    public void setTblExpoHalls(TblExpoHallsImpl value) {
        setAttributeInternal(TBLEXPOHALLS, value);
    }

    /**
     * @return the associated entity TblExpoStallsImpl.
     */
    public TblExpoStallsImpl getTblExpoStalls() {
        return (TblExpoStallsImpl) getAttributeInternal(TBLEXPOSTALLS);
    }

    /**
     * Sets <code>value</code> as the associated entity TblExpoStallsImpl.
     */
    public void setTblExpoStalls(TblExpoStallsImpl value) {
        setAttributeInternal(TBLEXPOSTALLS, value);
    }

    /**
     * @param stallsAllocId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal stallsAllocId) {
        return new Key(new Object[] { stallsAllocId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblStallsAlloc");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                 try {
                     loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUID"));
                 } catch(Exception ex) {
                     ex.printStackTrace();
                 }
                 
                 if (operation == DML_INSERT) {
                     setCreatedBy(loginId);
                     setUpdatedBy(loginId);
                     } else if(operation == DML_UPDATE) {
                     setUpdatedBy(loginId);
                 }
        super.doDML(operation, e);
    }
}

