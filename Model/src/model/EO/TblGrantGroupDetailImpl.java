package model.EO;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 06 13:04:39 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblGrantGroupDetailImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        GrantGroupDetailId,
        GrantGroupMasterId,
        FarmerRegId,
        CreatedBy,
        CreatedDate,
        UpdatedBy,
        UpdatedDate,
        TblGrantGroupMaster,
        TblFarmerReg,
        Map_Farmer_Detail,
        Map_Farmer_Detail1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GRANTGROUPDETAILID = AttributesEnum.GrantGroupDetailId.index();
    public static final int GRANTGROUPMASTERID = AttributesEnum.GrantGroupMasterId.index();
    public static final int FARMERREGID = AttributesEnum.FarmerRegId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int TBLGRANTGROUPMASTER = AttributesEnum.TblGrantGroupMaster.index();
    public static final int TBLFARMERREG = AttributesEnum.TblFarmerReg.index();
    public static final int MAP_FARMER_DETAIL = AttributesEnum.Map_Farmer_Detail.index();
    public static final int MAP_FARMER_DETAIL1 = AttributesEnum.Map_Farmer_Detail1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblGrantGroupDetailImpl() {
    }

    /**
     * Gets the attribute value for GrantGroupDetailId, using the alias name GrantGroupDetailId.
     * @return the value of GrantGroupDetailId
     */
    public Number getGrantGroupDetailId() {
        return (Number) getAttributeInternal(GRANTGROUPDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrantGroupDetailId.
     * @param value value to set the GrantGroupDetailId
     */
    public void setGrantGroupDetailId(Number value) {
        setAttributeInternal(GRANTGROUPDETAILID, value);
    }

    /**
     * Gets the attribute value for GrantGroupMasterId, using the alias name GrantGroupMasterId.
     * @return the value of GrantGroupMasterId
     */
    public Number getGrantGroupMasterId() {
        return (Number) getAttributeInternal(GRANTGROUPMASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrantGroupMasterId.
     * @param value value to set the GrantGroupMasterId
     */
    public void setGrantGroupMasterId(Number value) {
        setAttributeInternal(GRANTGROUPMASTERID, value);
    }

    /**
     * Gets the attribute value for FarmerRegId, using the alias name FarmerRegId.
     * @return the value of FarmerRegId
     */
    public Number getFarmerRegId() {
        return (Number) getAttributeInternal(FARMERREGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FarmerRegId.
     * @param value value to set the FarmerRegId
     */
    public void setFarmerRegId(Number value) {
        setAttributeInternal(FARMERREGID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * @return the associated entity TblGrantGroupMasterImpl.
     */
    public TblGrantGroupMasterImpl getTblGrantGroupMaster() {
        return (TblGrantGroupMasterImpl) getAttributeInternal(TBLGRANTGROUPMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity TblGrantGroupMasterImpl.
     */
    public void setTblGrantGroupMaster(TblGrantGroupMasterImpl value) {
        setAttributeInternal(TBLGRANTGROUPMASTER, value);
    }

    /**
     * @return the associated entity TblFarmerRegImpl.
     */
    public TblFarmerRegImpl getTblFarmerReg() {
        return (TblFarmerRegImpl) getAttributeInternal(TBLFARMERREG);
    }

    /**
     * Sets <code>value</code> as the associated entity TblFarmerRegImpl.
     */
    public void setTblFarmerReg(TblFarmerRegImpl value) {
        setAttributeInternal(TBLFARMERREG, value);
    }

    /**
     * @return the associated entity Map_Farmer_DetailImpl.
     */
    public Map_Farmer_DetailImpl getMap_Farmer_Detail() {
        return (Map_Farmer_DetailImpl) getAttributeInternal(MAP_FARMER_DETAIL);
    }

    /**
     * Sets <code>value</code> as the associated entity Map_Farmer_DetailImpl.
     */
    public void setMap_Farmer_Detail(Map_Farmer_DetailImpl value) {
        setAttributeInternal(MAP_FARMER_DETAIL, value);
    }

    /**
     * @return the associated entity Map_Farmer_DetailImpl.
     */
    public Map_Farmer_DetailImpl getMap_Farmer_Detail1() {
        return (Map_Farmer_DetailImpl) getAttributeInternal(MAP_FARMER_DETAIL1);
    }

    /**
     * Sets <code>value</code> as the associated entity Map_Farmer_DetailImpl.
     */
    public void setMap_Farmer_Detail1(Map_Farmer_DetailImpl value) {
        setAttributeInternal(MAP_FARMER_DETAIL1, value);
    }

    /**
     * @param grantGroupDetailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number grantGroupDetailId) {
        return new Key(new Object[] { grantGroupDetailId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblGrantGroupDetail");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
         try {
             loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {
             setCreatedBy(loginId);
             setUpdatedBy(loginId);
             } else if(operation == DML_UPDATE) {
             setUpdatedBy(loginId);
         }
        super.doDML(operation, e);
    }
}

