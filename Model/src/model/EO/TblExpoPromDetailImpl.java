package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 30 12:31:50 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblExpoPromDetailImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ExpoPromDetailId,
        ExpoPromSetupId,
        StallArea,
        AreaRate,
        StallAmount,
        TastingAmt,
        SalesAmt,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblExpoPromSetup;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EXPOPROMDETAILID = AttributesEnum.ExpoPromDetailId.index();
    public static final int EXPOPROMSETUPID = AttributesEnum.ExpoPromSetupId.index();
    public static final int STALLAREA = AttributesEnum.StallArea.index();
    public static final int AREARATE = AttributesEnum.AreaRate.index();
    public static final int STALLAMOUNT = AttributesEnum.StallAmount.index();
    public static final int TASTINGAMT = AttributesEnum.TastingAmt.index();
    public static final int SALESAMT = AttributesEnum.SalesAmt.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLEXPOPROMSETUP = AttributesEnum.TblExpoPromSetup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblExpoPromDetailImpl() {
    }

    /**
     * Gets the attribute value for ExpoPromDetailId, using the alias name ExpoPromDetailId.
     * @return the value of ExpoPromDetailId
     */
    public BigDecimal getExpoPromDetailId() {
        return (BigDecimal) getAttributeInternal(EXPOPROMDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpoPromDetailId.
     * @param value value to set the ExpoPromDetailId
     */
    public void setExpoPromDetailId(BigDecimal value) {
        setAttributeInternal(EXPOPROMDETAILID, value);
    }

    /**
     * Gets the attribute value for ExpoPromSetupId, using the alias name ExpoPromSetupId.
     * @return the value of ExpoPromSetupId
     */
    public BigDecimal getExpoPromSetupId() {
        return (BigDecimal) getAttributeInternal(EXPOPROMSETUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpoPromSetupId.
     * @param value value to set the ExpoPromSetupId
     */
    public void setExpoPromSetupId(BigDecimal value) {
        setAttributeInternal(EXPOPROMSETUPID, value);
    }

    /**
     * Gets the attribute value for StallArea, using the alias name StallArea.
     * @return the value of StallArea
     */
    public BigDecimal getStallArea() {
        return (BigDecimal) getAttributeInternal(STALLAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for StallArea.
     * @param value value to set the StallArea
     */
    public void setStallArea(BigDecimal value) {
        setAttributeInternal(STALLAREA, value);
    }

    /**
     * Gets the attribute value for AreaRate, using the alias name AreaRate.
     * @return the value of AreaRate
     */
    public BigDecimal getAreaRate() {
        return (BigDecimal) getAttributeInternal(AREARATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AreaRate.
     * @param value value to set the AreaRate
     */
    public void setAreaRate(BigDecimal value) {
        setAttributeInternal(AREARATE, value);
    }

    /**
     * Gets the attribute value for StallAmount, using the alias name StallAmount.
     * @return the value of StallAmount
     */
    public BigDecimal getStallAmount() {
        return (BigDecimal) getAttributeInternal(STALLAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StallAmount.
     * @param value value to set the StallAmount
     */
    public void setStallAmount(BigDecimal value) {
        setAttributeInternal(STALLAMOUNT, value);
    }

    /**
     * Gets the attribute value for TastingAmt, using the alias name TastingAmt.
     * @return the value of TastingAmt
     */
    public BigDecimal getTastingAmt() {
        return (BigDecimal) getAttributeInternal(TASTINGAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TastingAmt.
     * @param value value to set the TastingAmt
     */
    public void setTastingAmt(BigDecimal value) {
        setAttributeInternal(TASTINGAMT, value);
    }

    /**
     * Gets the attribute value for SalesAmt, using the alias name SalesAmt.
     * @return the value of SalesAmt
     */
    public BigDecimal getSalesAmt() {
        return (BigDecimal) getAttributeInternal(SALESAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesAmt.
     * @param value value to set the SalesAmt
     */
    public void setSalesAmt(BigDecimal value) {
        setAttributeInternal(SALESAMT, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTblExpoPromSetup() {
        return (EntityImpl) getAttributeInternal(TBLEXPOPROMSETUP);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblExpoPromSetup(EntityImpl value) {
        setAttributeInternal(TBLEXPOPROMSETUP, value);
    }

    /**
     * @param expoPromSetupId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal expoPromSetupId) {
        return new Key(new Object[] { expoPromSetupId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblExpoPromDetail");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                 try {
                     loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
                 } catch(Exception ex) {
                     ex.printStackTrace();
                 }
                 
                 if (operation == DML_INSERT) {
                     setCreatedBy(loginId);
                     setUpdatedBy(loginId);
                     } else if(operation == DML_UPDATE) {
                     setUpdatedBy(loginId);
                 }
        super.doDML(operation, e);
    }
}

