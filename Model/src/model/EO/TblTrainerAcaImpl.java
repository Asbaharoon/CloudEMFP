package model.EO;

import oracle.jbo.domain.Number;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 31 12:16:54 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblTrainerAcaImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TrainerAcaId,
        TrainerId,
        Degree,
        PassYear,
        MajSub,
        UniBoard,
        Perc,
        Cgpa,
        CreatedBy,
        CreatedDate,
        UpdatedBy,
        UpdatedDate,
        TblTrainer;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TRAINERACAID = AttributesEnum.TrainerAcaId.index();
    public static final int TRAINERID = AttributesEnum.TrainerId.index();
    public static final int DEGREE = AttributesEnum.Degree.index();
    public static final int PASSYEAR = AttributesEnum.PassYear.index();
    public static final int MAJSUB = AttributesEnum.MajSub.index();
    public static final int UNIBOARD = AttributesEnum.UniBoard.index();
    public static final int PERC = AttributesEnum.Perc.index();
    public static final int CGPA = AttributesEnum.Cgpa.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int TBLTRAINER = AttributesEnum.TblTrainer.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblTrainerAcaImpl() {
    }

    /**
     * Gets the attribute value for TrainerAcaId, using the alias name TrainerAcaId.
     * @return the value of TrainerAcaId
     */
    public Number getTrainerAcaId() {
        return (Number) getAttributeInternal(TRAINERACAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrainerAcaId.
     * @param value value to set the TrainerAcaId
     */
    public void setTrainerAcaId(Number value) {
        setAttributeInternal(TRAINERACAID, value);
    }

    /**
     * Gets the attribute value for TrainerId, using the alias name TrainerId.
     * @return the value of TrainerId
     */
    public Number getTrainerId() {
        return (Number) getAttributeInternal(TRAINERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrainerId.
     * @param value value to set the TrainerId
     */
    public void setTrainerId(Number value) {
        setAttributeInternal(TRAINERID, value);
    }

    /**
     * Gets the attribute value for Degree, using the alias name Degree.
     * @return the value of Degree
     */
    public String getDegree() {
        return (String) getAttributeInternal(DEGREE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Degree.
     * @param value value to set the Degree
     */
    public void setDegree(String value) {
        setAttributeInternal(DEGREE, value);
    }

    /**
     * Gets the attribute value for PassYear, using the alias name PassYear.
     * @return the value of PassYear
     */
    public Number getPassYear() {
        return (Number) getAttributeInternal(PASSYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PassYear.
     * @param value value to set the PassYear
     */
    public void setPassYear(Number value) {
        setAttributeInternal(PASSYEAR, value);
    }

    /**
     * Gets the attribute value for MajSub, using the alias name MajSub.
     * @return the value of MajSub
     */
    public String getMajSub() {
        return (String) getAttributeInternal(MAJSUB);
    }

    /**
     * Sets <code>value</code> as the attribute value for MajSub.
     * @param value value to set the MajSub
     */
    public void setMajSub(String value) {
        setAttributeInternal(MAJSUB, value);
    }

    /**
     * Gets the attribute value for UniBoard, using the alias name UniBoard.
     * @return the value of UniBoard
     */
    public String getUniBoard() {
        return (String) getAttributeInternal(UNIBOARD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UniBoard.
     * @param value value to set the UniBoard
     */
    public void setUniBoard(String value) {
        setAttributeInternal(UNIBOARD, value);
    }

    /**
     * Gets the attribute value for Perc, using the alias name Perc.
     * @return the value of Perc
     */
    public Integer getPerc() {
        return (Integer) getAttributeInternal(PERC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Perc.
     * @param value value to set the Perc
     */
    public void setPerc(Integer value) {
        setAttributeInternal(PERC, value);
    }

    /**
     * Gets the attribute value for Cgpa, using the alias name Cgpa.
     * @return the value of Cgpa
     */
    public String getCgpa() {
        return (String) getAttributeInternal(CGPA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cgpa.
     * @param value value to set the Cgpa
     */
    public void setCgpa(String value) {
        setAttributeInternal(CGPA, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * @return the associated entity TblTrainerImpl.
     */
    public TblTrainerImpl getTblTrainer() {
        return (TblTrainerImpl) getAttributeInternal(TBLTRAINER);
    }

    /**
     * Sets <code>value</code> as the associated entity TblTrainerImpl.
     */
    public void setTblTrainer(TblTrainerImpl value) {
        setAttributeInternal(TBLTRAINER, value);
    }

    /**
     * @param trainerAcaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number trainerAcaId) {
        return new Key(new Object[] { trainerAcaId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblTrainerAca");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
         try {
             loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {
             setCreatedBy(loginId);
             setUpdatedBy(loginId);
             } else if(operation == DML_UPDATE) {
             setUpdatedBy(loginId);
         }
        super.doDML(operation, e);
    }
}

