package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 30 12:17:49 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblCertDisburseImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CertApprovalId,
        CertDisburseId,
        Dated,
        FinalGrant,
        ChqNo,
        ChqDate,
        Payee,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblCertApproval;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CERTAPPROVALID = AttributesEnum.CertApprovalId.index();
    public static final int CERTDISBURSEID = AttributesEnum.CertDisburseId.index();
    public static final int DATED = AttributesEnum.Dated.index();
    public static final int FINALGRANT = AttributesEnum.FinalGrant.index();
    public static final int CHQNO = AttributesEnum.ChqNo.index();
    public static final int CHQDATE = AttributesEnum.ChqDate.index();
    public static final int PAYEE = AttributesEnum.Payee.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLCERTAPPROVAL = AttributesEnum.TblCertApproval.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblCertDisburseImpl() {
    }

    /**
     * Gets the attribute value for CertApprovalId, using the alias name CertApprovalId.
     * @return the value of CertApprovalId
     */
    public Number getCertApprovalId() {
        return (Number) getAttributeInternal(CERTAPPROVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertApprovalId.
     * @param value value to set the CertApprovalId
     */
    public void setCertApprovalId(Number value) {
        setAttributeInternal(CERTAPPROVALID, value);
    }

    /**
     * Gets the attribute value for CertDisburseId, using the alias name CertDisburseId.
     * @return the value of CertDisburseId
     */
    public Number getCertDisburseId() {
        return (Number) getAttributeInternal(CERTDISBURSEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CertDisburseId.
     * @param value value to set the CertDisburseId
     */
    public void setCertDisburseId(Number value) {
        setAttributeInternal(CERTDISBURSEID, value);
    }

    /**
     * Gets the attribute value for Dated, using the alias name Dated.
     * @return the value of Dated
     */
    public Timestamp getDated() {
        return (Timestamp) getAttributeInternal(DATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dated.
     * @param value value to set the Dated
     */
    public void setDated(Timestamp value) {
        setAttributeInternal(DATED, value);
    }

    /**
     * Gets the attribute value for FinalGrant, using the alias name FinalGrant.
     * @return the value of FinalGrant
     */
    public Number getFinalGrant() {
        return (Number) getAttributeInternal(FINALGRANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FinalGrant.
     * @param value value to set the FinalGrant
     */
    public void setFinalGrant(Number value) {
        setAttributeInternal(FINALGRANT, value);
    }

    /**
     * Gets the attribute value for ChqNo, using the alias name ChqNo.
     * @return the value of ChqNo
     */
    public String getChqNo() {
        return (String) getAttributeInternal(CHQNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqNo.
     * @param value value to set the ChqNo
     */
    public void setChqNo(String value) {
        setAttributeInternal(CHQNO, value);
    }

    /**
     * Gets the attribute value for ChqDate, using the alias name ChqDate.
     * @return the value of ChqDate
     */
    public Timestamp getChqDate() {
        return (Timestamp) getAttributeInternal(CHQDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqDate.
     * @param value value to set the ChqDate
     */
    public void setChqDate(Timestamp value) {
        setAttributeInternal(CHQDATE, value);
    }

    /**
     * Gets the attribute value for Payee, using the alias name Payee.
     * @return the value of Payee
     */
    public String getPayee() {
        return (String) getAttributeInternal(PAYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Payee.
     * @param value value to set the Payee
     */
    public void setPayee(String value) {
        setAttributeInternal(PAYEE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity TblCertApprovalImpl.
     */
    public TblCertApprovalImpl getTblCertApproval() {
        return (TblCertApprovalImpl) getAttributeInternal(TBLCERTAPPROVAL);
    }

    /**
     * Sets <code>value</code> as the associated entity TblCertApprovalImpl.
     */
    public void setTblCertApproval(TblCertApprovalImpl value) {
        setAttributeInternal(TBLCERTAPPROVAL, value);
    }

    /**
     * @param certDisburseId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number certDisburseId) {
        return new Key(new Object[] { certDisburseId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblCertDisburse");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                 try {
                     loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
                 } catch(Exception ex) {
                     ex.printStackTrace();
                 }
                 
                 if (operation == DML_INSERT) {
                     setCreatedBy(loginId);
                     setUpdatedBy(loginId);
                     } else if(operation == DML_UPDATE) {
                     setUpdatedBy(loginId);
                 }
        super.doDML(operation, e);
    }
}

