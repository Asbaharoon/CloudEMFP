package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 31 12:05:47 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblSupplierImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SupplierId,
        Name,
        Ast,
        Payee,
        ConPer,
        Designation,
        Cnic,
        Ntn,
        Telephone,
        Mobile,
        Email,
        Url,
        Address,
        CityLibrDetail,
        Type,
        VendorType,
        Gst,
        TypeTechProv,
        DistrictLibrDetail,
        NoOfEmp,
        NoOfYearExp,
        CreatedBy,
        CreatedDate,
        UpdatedBy,
        UpdatedDate,
        TblGrantAppDetail,
        TblLibrDetail,
        TblLibrDetail1,
        TblSupplierPart,
        TblSupplierRateMaster;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int PAYEE = AttributesEnum.Payee.index();
    public static final int CONPER = AttributesEnum.ConPer.index();
    public static final int DESIGNATION = AttributesEnum.Designation.index();
    public static final int CNIC = AttributesEnum.Cnic.index();
    public static final int NTN = AttributesEnum.Ntn.index();
    public static final int TELEPHONE = AttributesEnum.Telephone.index();
    public static final int MOBILE = AttributesEnum.Mobile.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int URL = AttributesEnum.Url.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int CITYLIBRDETAIL = AttributesEnum.CityLibrDetail.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int VENDORTYPE = AttributesEnum.VendorType.index();
    public static final int GST = AttributesEnum.Gst.index();
    public static final int TYPETECHPROV = AttributesEnum.TypeTechProv.index();
    public static final int DISTRICTLIBRDETAIL = AttributesEnum.DistrictLibrDetail.index();
    public static final int NOOFEMP = AttributesEnum.NoOfEmp.index();
    public static final int NOOFYEAREXP = AttributesEnum.NoOfYearExp.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int TBLGRANTAPPDETAIL = AttributesEnum.TblGrantAppDetail.index();
    public static final int TBLLIBRDETAIL = AttributesEnum.TblLibrDetail.index();
    public static final int TBLLIBRDETAIL1 = AttributesEnum.TblLibrDetail1.index();
    public static final int TBLSUPPLIERPART = AttributesEnum.TblSupplierPart.index();
    public static final int TBLSUPPLIERRATEMASTER = AttributesEnum.TblSupplierRateMaster.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblSupplierImpl() {
    }

    /**
     * Gets the attribute value for SupplierId, using the alias name SupplierId.
     * @return the value of SupplierId
     */
    public BigDecimal getSupplierId() {
        return (BigDecimal) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierId.
     * @param value value to set the SupplierId
     */
    public void setSupplierId(BigDecimal value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the value of Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for Payee, using the alias name Payee.
     * @return the value of Payee
     */
    public String getPayee() {
        return (String) getAttributeInternal(PAYEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Payee.
     * @param value value to set the Payee
     */
    public void setPayee(String value) {
        setAttributeInternal(PAYEE, value);
    }

    /**
     * Gets the attribute value for ConPer, using the alias name ConPer.
     * @return the value of ConPer
     */
    public String getConPer() {
        return (String) getAttributeInternal(CONPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConPer.
     * @param value value to set the ConPer
     */
    public void setConPer(String value) {
        setAttributeInternal(CONPER, value);
    }

    /**
     * Gets the attribute value for Designation, using the alias name Designation.
     * @return the value of Designation
     */
    public String getDesignation() {
        return (String) getAttributeInternal(DESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Designation.
     * @param value value to set the Designation
     */
    public void setDesignation(String value) {
        setAttributeInternal(DESIGNATION, value);
    }

    /**
     * Gets the attribute value for Cnic, using the alias name Cnic.
     * @return the value of Cnic
     */
    public String getCnic() {
        return (String) getAttributeInternal(CNIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cnic.
     * @param value value to set the Cnic
     */
    public void setCnic(String value) {
        setAttributeInternal(CNIC, value);
    }

    /**
     * Gets the attribute value for Ntn, using the alias name Ntn.
     * @return the value of Ntn
     */
    public String getNtn() {
        return (String) getAttributeInternal(NTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ntn.
     * @param value value to set the Ntn
     */
    public void setNtn(String value) {
        setAttributeInternal(NTN, value);
    }

    /**
     * Gets the attribute value for Telephone, using the alias name Telephone.
     * @return the value of Telephone
     */
    public String getTelephone() {
        return (String) getAttributeInternal(TELEPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Telephone.
     * @param value value to set the Telephone
     */
    public void setTelephone(String value) {
        setAttributeInternal(TELEPHONE, value);
    }

    /**
     * Gets the attribute value for Mobile, using the alias name Mobile.
     * @return the value of Mobile
     */
    public String getMobile() {
        return (String) getAttributeInternal(MOBILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mobile.
     * @param value value to set the Mobile
     */
    public void setMobile(String value) {
        setAttributeInternal(MOBILE, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Url, using the alias name Url.
     * @return the value of Url
     */
    public String getUrl() {
        return (String) getAttributeInternal(URL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Url.
     * @param value value to set the Url
     */
    public void setUrl(String value) {
        setAttributeInternal(URL, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for CityLibrDetail, using the alias name CityLibrDetail.
     * @return the value of CityLibrDetail
     */
    public BigDecimal getCityLibrDetail() {
        return (BigDecimal) getAttributeInternal(CITYLIBRDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CityLibrDetail.
     * @param value value to set the CityLibrDetail
     */
    public void setCityLibrDetail(BigDecimal value) {
        setAttributeInternal(CITYLIBRDETAIL, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the value of Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for VendorType, using the alias name VendorType.
     * @return the value of VendorType
     */
    public String getVendorType() {
        return (String) getAttributeInternal(VENDORTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendorType.
     * @param value value to set the VendorType
     */
    public void setVendorType(String value) {
        setAttributeInternal(VENDORTYPE, value);
    }

    /**
     * Gets the attribute value for Gst, using the alias name Gst.
     * @return the value of Gst
     */
    public String getGst() {
        return (String) getAttributeInternal(GST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gst.
     * @param value value to set the Gst
     */
    public void setGst(String value) {
        setAttributeInternal(GST, value);
    }

    /**
     * Gets the attribute value for TypeTechProv, using the alias name TypeTechProv.
     * @return the value of TypeTechProv
     */
    public String getTypeTechProv() {
        return (String) getAttributeInternal(TYPETECHPROV);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeTechProv.
     * @param value value to set the TypeTechProv
     */
    public void setTypeTechProv(String value) {
        setAttributeInternal(TYPETECHPROV, value);
    }

    /**
     * Gets the attribute value for DistrictLibrDetail, using the alias name DistrictLibrDetail.
     * @return the value of DistrictLibrDetail
     */
    public BigDecimal getDistrictLibrDetail() {
        return (BigDecimal) getAttributeInternal(DISTRICTLIBRDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DistrictLibrDetail.
     * @param value value to set the DistrictLibrDetail
     */
    public void setDistrictLibrDetail(BigDecimal value) {
        setAttributeInternal(DISTRICTLIBRDETAIL, value);
    }

    /**
     * Gets the attribute value for NoOfEmp, using the alias name NoOfEmp.
     * @return the value of NoOfEmp
     */
    public BigDecimal getNoOfEmp() {
        return (BigDecimal) getAttributeInternal(NOOFEMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfEmp.
     * @param value value to set the NoOfEmp
     */
    public void setNoOfEmp(BigDecimal value) {
        setAttributeInternal(NOOFEMP, value);
    }

    /**
     * Gets the attribute value for NoOfYearExp, using the alias name NoOfYearExp.
     * @return the value of NoOfYearExp
     */
    public BigDecimal getNoOfYearExp() {
        return (BigDecimal) getAttributeInternal(NOOFYEAREXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfYearExp.
     * @param value value to set the NoOfYearExp
     */
    public void setNoOfYearExp(BigDecimal value) {
        setAttributeInternal(NOOFYEAREXP, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblGrantAppDetail() {
        return (RowIterator) getAttributeInternal(TBLGRANTAPPDETAIL);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTblLibrDetail() {
        return (EntityImpl) getAttributeInternal(TBLLIBRDETAIL);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblLibrDetail(EntityImpl value) {
        setAttributeInternal(TBLLIBRDETAIL, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTblLibrDetail1() {
        return (EntityImpl) getAttributeInternal(TBLLIBRDETAIL1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblLibrDetail1(EntityImpl value) {
        setAttributeInternal(TBLLIBRDETAIL1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblSupplierPart() {
        return (RowIterator) getAttributeInternal(TBLSUPPLIERPART);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblSupplierRateMaster() {
        return (RowIterator) getAttributeInternal(TBLSUPPLIERRATEMASTER);
    }

    /**
     * @param supplierId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal supplierId) {
        return new Key(new Object[] { supplierId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblSupplier");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        BigDecimal loginId = null;
         try {
             loginId = new BigDecimal((String) ADFContext.getCurrent().getSessionScope().get("sessUID"));
         } catch(Exception ex) {
             ex.printStackTrace();
         }
         
         if (operation == DML_INSERT) {
             setCreatedBy(loginId);
             setUpdatedBy(loginId);
         } else {
             setUpdatedBy(loginId);
         }
        super.doDML(operation, e);
    }
}

